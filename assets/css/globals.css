@tailwind base;
@tailwind components;
@tailwind utilities;


@import url("./trophy.css");

/* Import fonts */
@import url("../fonts/geist/style.css");
@import url("../fonts/Vegawanty/style.css");

:root {
  --dark: #1a1a1a;
  --dark-secondary: #282828;
}

html {
  scroll-behavior: smooth;
  color-scheme: dark;
}

body {
  margin: 0;
  padding: 0;
  
  /* background-color: var(--dark); Use CSS variable directly */
}

.container {
  @apply max-w-[1936px];
}

.geist-regular {
  font-family: 'Geist', sans-serif;
}

.font-geist {
  font-family: 'Geist', sans-serif;
}

.font-vegawanty {
  font-family: 'Vegawanty', sans-serif;
}

.geist-ui {
  font-family: 'walt-disney-ui', sans-serif;
}

.logo_text {
  letter-spacing: 1px;
}

.team-lead {
  border: 2px solid #14B8A6;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
}

.role {
  background: #212121;
  color: #E4E4E7;
  padding: 0.5rem;
  border-radius: 0.375rem;
  font-weight: 500;
  display: inline-block;
}

.github-logo {
  width: 20px;
  height: 20px;
  vertical-align: middle;
  margin-right: 0.5rem;
  filter: invert(1);
}


/* custom css */



.okactive {
  border-width: 1px;
  /* border-color: rgb(195, 195, 195) !important;  */
  background-color: rgb(38 38 38) !important;
  color: rgb(34 197 94);
}

/* back to top */

.button {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background-color: rgb(20, 20, 20);
  border: none;
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0px 0px 0px 4px rgba(138, 138, 138, 0.253);
  cursor: pointer;
  transition-duration: 0.3s;
  overflow: hidden;
  position: relative;
}

.svgIcon {
  width: 12px;
  transition-duration: 0.3s;
}

.svgIcon path {
  fill: white;
}

.button:hover {
  width: 100px;
  border-radius: 50px;
  transition-duration: 0.3s;
  background-color: rgb(70, 70, 70);
  align-items: center;
}

.button:hover .svgIcon {
  /* width: 20px; */
  transition-duration: 0.3s;
  transform: translateY(-200%);
}

.button::before {
  position: absolute;
  bottom: -20px;
  content: "Back to Top";
  color: white;
  /* transition-duration: .3s; */
  font-size: 0px;
}

.button:hover::before {
  font-size: 13px;
  opacity: 1;
  bottom: unset;
  /* transform: translateY(-30px); */
  transition-duration: 0.3s;
}


/* rating stars */

.rating>label {
  margin-right: 4px;
}

.rating:not(:checked)>input {
  display: none;
}

.rating:not(:checked)>label {
  float: right;
  cursor: pointer;
  font-size: 30px;
}

.rating:not(:checked)>label>svg {
  fill: #19c37d;
  transition: fill 0.3s ease;
}

.rating>input:checked~label>svg {
  fill: #ffa723;
}

.rating:not(:checked)>label:hover~label>svg,
.rating:not(:checked)>label:hover>svg {
  fill: #ff9e0b;
}

#star1:hover~label>svg,
#star1:hover>svg {
  fill: #a23c3c !important;
}

#star2:hover~label>svg,
#star2:hover>svg {
  fill: #99542d !important;
}

#star3:hover~label>svg,
#star3:hover>svg {
  fill: #9f7e18 !important;
}

#star4:hover~label>svg,
#star4:hover>svg {
  fill: #22885e !important;
}

#star5:hover~label>svg,
#star5:hover>svg {
  fill: #7951ac !important;
}

#star1:checked~label>svg {
  fill: #ef4444;
}

#star2:checked~label>svg {
  fill: #e06c2b;
}

#star3:checked~label>svg {
  fill: #eab308;
}

#star4:checked~label>svg {
  fill: #19c37d;
}

#star5:checked~label>svg {
  fill: #ab68ff;
}


/* download button */

.container1 {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
}

.label {
  background-color: transparent;
  border: 2px solid rgb(54, 54, 54);
  display: flex;
  align-items: center;
  border-radius: 50px;
  width: 150px;
  cursor: pointer;
  transition: all 0.4s ease;
  padding: 5px;
  position: relative;
}

.label::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: #fff;
  width: 8px;
  height: 8px;
  transition: all 0.4s ease;
  border-radius: 100%;
  margin: auto;
  opacity: 0;
  visibility: hidden;
}

.label .input {
  display: none;
}

.label .title {
  font-size: 17px;
  color: #fff;
  transition: all 0.4s ease;
  position: absolute;
  right: 15px;
  bottom: 14px;
  text-align: center;
}

.label .title:last-child {
  opacity: 0;
  visibility: hidden;
}

.label .circle {
  height: 45px;
  width: 45px;
  border-radius: 50%;
  background-color: rgb(54, 54, 54);
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.4s ease;
  position: relative;
  box-shadow: 0 0 0 0 rgb(255, 255, 255);
  overflow: hidden;
}

.label .circle .icon {
  color: #fff;
  width: 30px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: all 0.4s ease;
}

.label .circle .square {
  aspect-ratio: 1;
  width: 15px;
  border-radius: 2px;
  background-color: #fff;
  opacity: 0;
  visibility: hidden;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: all 0.4s ease;
}

.label .circle::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  background-color: #6e6e6e;
  width: 100%;
  height: 0;
  transition: all 0.4s ease;
}

.label:has(.input:checked) {
  width: 57px;
  animation: installed 0.4s ease 3.5s forwards;
}

.label:has(.input:checked)::before {
  animation: rotate 3s ease-in-out 0.4s forwards;
}

.label .input:checked+.circle {
  animation: pulse 1s forwards, circleDelete 0.2s ease 3.5s forwards;
  rotate: 180deg;
}

.label .input:checked+.circle::before {
  animation: installing 3s ease-in-out forwards;
}

.label .input:checked+.circle .icon {
  opacity: 0;
  visibility: hidden;
}

.label .input:checked~.circle .square {
  opacity: 1;
  visibility: visible;
}

.label .input:checked~.title {
  opacity: 0;
  visibility: hidden;
}

.label .input:checked~.title:last-child {
  animation: showInstalledMessage 0.4s ease 3.5s forwards;
}

@keyframes pulse {
  0% {
    scale: 0.95;
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.7);
  }

  70% {
    scale: 1;
    box-shadow: 0 0 0 16px rgba(255, 255, 255, 0);
  }

  100% {
    scale: 0.95;
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
  }
}

@keyframes installing {
  from {
    height: 0;
  }

  to {
    height: 100%;
  }
}

@keyframes rotate {
  0% {
    transform: rotate(-90deg) translate(27px) rotate(0);
    opacity: 1;
    visibility: visible;
  }

  99% {
    transform: rotate(270deg) translate(27px) rotate(270deg);
    opacity: 1;
    visibility: visible;
  }

  100% {
    opacity: 0;
    visibility: hidden;
  }
}

@keyframes installed {
  100% {
    width: 150px;
    border-color: rgb(35, 174, 35);
  }
}

@keyframes circleDelete {
  100% {
    opacity: 0;
    visibility: hidden;
  }
}

@keyframes showInstalledMessage {
  100% {
    opacity: 1;
    visibility: visible;
    right: 56px;
  }
}